//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('koapache', ["form-data","fs","url","http","https","babel-polyfill","koa","koa-logger","koa-body","@koa/cors","koa-static","internal-ip","opn","path","child_process"], factory);
    else if (typeof module === 'object')
        return  module.exports = factory(require('form-data'),require('fs'),require('url'),require('http'),require('https'),require('babel-polyfill'),require('koa'),require('koa-logger'),require('koa-body'),require('@koa/cors'),require('koa-static'),require('internal-ip'),require('opn'),require('path'),require('child_process'));
    else
        return  this['koapache'] = factory(this['form-data'],this['fs'],this['url'],this['http'],this['https'],this['babel-polyfill'],this['koa'],this['koa-logger'],this['koa-body'],this['@koa/cors'],this['koa-static'],this['internal-ip'],this['opn'],this['path'],this['child_process']);

})(function (form_data,fs,url,http,https,babel_polyfill,koa,koa_logger,koa_body,_koa_cors,koa_static,internal_ip,opn,path,child_process) {

function merge(base, path) {

    return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {

        return input[index - 1] === '.' ? match : '';
    });
}

function outPackage(name) {
    return (/^[^./]/.test(name)
    );
}

    var require = _require_.bind(null, './');

    function _require_(base, path) {

        var module = _module_[
                outPackage( path )  ?  path  :  ('./' + merge(base, path))
            ],
            exports;

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = require( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    _require_.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var _module_ = {
    './ProxyAgent': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {

            /**
             * @param {string}  URL
             * @param {Context} context
             *
             * @return {IncomingMessage}
             */
            var pipe = function () {
                var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(URL, context) {
                    var header, response, key;
                    return regeneratorRuntime.wrap(function _callee2$(_context2) {
                        while (1) {
                            switch (_context2.prev = _context2.next) {
                                case 0:
                                    header = Object.assign({}, context.header);


                                    delete header.host;

                                    _context2.next = 4;
                                    return resourceFrom(URL, context.method, header, buildData(context));

                                case 4:
                                    response = _context2.sent;


                                    context.status = response.statusCode, context.message = response.statusMessage;

                                    for (key in response.headers) {
                                        if (key !== 'status') context.set(key.replace(/^\w|-\w/g, function (char) {
                                            return char.toUpperCase();
                                        }), response.headers[key]);
                                    }return _context2.abrupt('return', context.body = response);

                                case 8:
                                case 'end':
                                    return _context2.stop();
                            }
                        }
                    }, _callee2, this);
                }));

                return function pipe(_x4, _x5) {
                    return _ref2.apply(this, arguments);
                };
            }();

            /**
             * @param {Object} proxyMap
             *
             * @return {AsyncFunction} Koa middleware
             */

            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.resourceFrom = resourceFrom;

            exports.default = function (proxyMap) {
                /**
                 * @param {Context}  context
                 * @param {Function} next
                 *
                 * @return {?IncomingMessage}
                 */
                return function () {
                    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(context, next) {
                        var URL, _path2, final;

                        return regeneratorRuntime.wrap(function _callee$(_context) {
                            while (1) {
                                switch (_context.prev = _context.next) {
                                    case 0:
                                        URL = context.path;
                                        _context.t0 = regeneratorRuntime.keys(proxyMap);

                                    case 2:
                                        if ((_context.t1 = _context.t0()).done) {
                                            _context.next = 9;
                                            break;
                                        }

                                        _path2 = _context.t1.value;
                                        final = URL.replace(proxyMap[_path2], _path2);

                                        if (!(final !== URL)) {
                                            _context.next = 7;
                                            break;
                                        }

                                        return _context.abrupt('return', pipe(final, context));

                                    case 7:
                                        _context.next = 2;
                                        break;

                                    case 9:
                                        _context.next = 11;
                                        return next();

                                    case 11:
                                    case 'end':
                                        return _context.stop();
                                }
                            }
                        }, _callee, this);
                    }));

                    return function (_x, _x2) {
                        return _ref.apply(this, arguments);
                    };
                }();
            };

            var _formData = require('form-data');

            var _formData2 = _interopRequireDefault(_formData);

            var _fs = require('fs');

            var _url = require('url');

            var _http = require('http');

            var _https = require('https');

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            /**
             * @external {Context} https://github.com/koajs/koa/blob/master/docs/api/context.md
             */

            /**
             * @param {Context} context
             *
             * @return {FormData|Object|string}
             */
            function buildData(context) {

                if (/^Head|Get|Delete$/.test(context.method)) return '';

                var request = context.request;

                if (request.type !== 'multipart/form-data') return request.body;

                var form = new _formData2.default();

                for (var key in request.fields) {
                    form.append(key, request.fields[key]);
                }for (var _key in request.files) {
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = request.files[_key][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var file = _step.value;
                            form.append(_key, (0, _fs.createReadStream)(file.path), file.name);
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }
                }return form;
            }

            /**
             * HTTP(S) request
             *
             * @param {string|URL}           URL
             * @param {string}               [method='GET']
             * @param {Object}               [header]
             * @param {string|Object|Buffer} [body]
             *
             * @return {Promise<IncomingMessage>} HTTP(S) response
             */
            function resourceFrom(URL) {
                var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';
                var header = arguments[2];
                var body = arguments[3];


                if (typeof URL === 'string') URL = (0, _url.parse)(URL);

                var option = {
                    method: method,
                    headers: Object.assign({
                        Accept: '*/*',
                        'User-Agent': 'Node.JS ' + process.version
                    }, header)
                },
                    client = URL.protocol[4] !== 's' ? _http.request : _https.request;

                if (body instanceof Object && !(body instanceof Buffer)) {

                    option.headers['Content-Type'] = 'application/json';

                    body = JSON.stringify(body);
                }

                for (var key in URL) {
                    if (URL[key] && !(URL[key] instanceof Function)) option[key] = URL[key];
                }return new Promise(function (resolve, reject) {
                    return client(option, resolve).on('error', reject).end(body);
                });
            }
        }
    },
    './utility': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });
            exports.configOf = configOf;
            exports.patternOf = patternOf;
            exports.currentModulePath = currentModulePath;

            var _fs = require('fs');

            /**
             * Get configuration of a Package from `package.json` in `process.cwd()`
             *
             * @param {string} name
             *
             * @return {?Object} (`process.env.NODE_ENV` will affect the result)
             */
            function configOf(name) {

                var config = JSON.parse((0, _fs.readFileSync)('./package.json'))[name];

                if (config) return config.env ? config.env[process.env.NODE_ENV] : config;
            }

            /**
             * @param {Object} map - Key for RegExp source, value for replacement
             *
             * @return {?Object} Key for replacement, value for RegExp
             */
            function patternOf(map) {

                var patternMap = {},
                    count = 0;

                for (var pattern in map) {
                    patternMap[map[pattern]] = new RegExp(pattern), count++;
                }return count ? patternMap : null;
            }

            /**
             * @return {string}
             */
            function currentModulePath() {

                try {
                    throw Error();
                } catch (error) {

                    return error.stack.split(/[\r\n]+/)[2].match(/at .+?\((.+):\d+:\d+\)/)[1];
                }
            }
        }
    },
    './WebServer': {
        base: '.',
        dependency: [],
        factory: function factory(require, exports, module) {
            Object.defineProperty(exports, "__esModule", {
                value: true
            });

            require('babel-polyfill');

            var _koa = require('koa');

            var _koa2 = _interopRequireDefault(_koa);

            var _utility = require('./utility');

            var _koaLogger = require('koa-logger');

            var _koaLogger2 = _interopRequireDefault(_koaLogger);

            var _koaBody = require('koa-body');

            var _koaBody2 = _interopRequireDefault(_koaBody);

            var _ProxyAgent = require('./ProxyAgent');

            var _ProxyAgent2 = _interopRequireDefault(_ProxyAgent);

            var _cors = require('@koa/cors');

            var _cors2 = _interopRequireDefault(_cors);

            var _koaStatic = require('koa-static');

            var _koaStatic2 = _interopRequireDefault(_koaStatic);

            var _internalIp = require('internal-ip');

            var _internalIp2 = _interopRequireDefault(_internalIp);

            var _opn = require('opn');

            var _opn2 = _interopRequireDefault(_opn);

            var _url = require('url');

            var _path = require('path');

            var _child_process = require('child_process');

            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : { default: obj };
            }

            /**
             * Web server
             */

            var WebServer = function () {
                /**
                 * @param {string}         [staticPath='.']
                 * @param {number}         [netPort=0]
                 * @param {boolean}        [XDomain=false]
                 * @param {?Object}        proxyMap         - Same as the parameter of {@link patternOf}
                 * @param {boolean|string} [openURL=false]
                 */
                function WebServer(staticPath, netPort, XDomain, proxyMap, openURL) {
                    _classCallCheck(this, WebServer);

                    /**
                     * @type {string}
                     */
                    this.staticPath = staticPath || '.';

                    /**
                     * @type {number}
                     */
                    this.netPort = +(netPort || 0);

                    /**
                     * @private
                     *
                     * @type {Application}
                     */
                    this.core = new _koa2.default();

                    /**
                     * @type {boolean}
                     */
                    this.XDomain = XDomain;

                    /**
                     * @private
                     *
                     * @type {?Object}
                     */
                    this.proxyMap = (0, _utility.patternOf)(proxyMap);

                    /**
                     * @private
                     *
                     * @type {boolean|string}
                     */
                    this.openPath = openURL;

                    /**
                     * @private
                     *
                     * @type {ServerAddress}
                     */
                    this.address = null;

                    this.boot();
                }

                /**
                 * @private
                 */


                _createClass(WebServer, [{
                    key: 'boot',
                    value: function boot() {

                        this.core.use((0, _koaLogger2.default)());

                        if (this.proxyMap) this.core.use((0, _koaBody2.default)({ multipart: true })).use((0, _ProxyAgent2.default)(this.proxyMap));

                        if (this.XDomain) this.core.use((0, _cors2.default)());

                        this.core.use((0, _koaStatic2.default)(this.staticPath));
                    }

                    /**
                     * Origin URI
                     *
                     * @type {string}
                     */

                }, {
                    key: 'localHost',


                    /**
                     * Create a server in the same Node.JS process
                     *
                     * @return {Server} HTTP server
                     */
                    value: function localHost() {

                        var server = this;

                        return this.core.listen(this.netPort, _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
                            return regeneratorRuntime.wrap(function _callee3$(_context3) {
                                while (1) {
                                    switch (_context3.prev = _context3.next) {
                                        case 0:

                                            server.address = Object.assign(this.address(), {
                                                family: 'IPv4',
                                                address: _internalIp2.default.v4.sync()
                                            });

                                            if (!process.send) {
                                                _context3.next = 3;
                                                break;
                                            }

                                            return _context3.abrupt('return', process.send({ type: 'ready', data: server.address }));

                                        case 3:

                                            console.info('Web server runs at ' + server.URL);

                                            if (!server.openPath) {
                                                _context3.next = 7;
                                                break;
                                            }

                                            _context3.next = 7;
                                            return (0, _opn2.default)(server.openURL);

                                        case 7:
                                        case 'end':
                                            return _context3.stop();
                                    }
                                }
                            }, _callee3, this);
                        }))).on('error', function (error) {

                            if (process.send) process.send({
                                type: 'error',
                                data: error
                            });else console.error(error);
                        });
                    }

                    /**
                     * Boot a server in a forked Node.JS process
                     *
                     * @return {Promise<ServerAddress>}
                     */

                }, {
                    key: 'workerHost',
                    value: function workerHost() {

                        var child = (0, _child_process.fork)((0, _path.join)((0, _utility.currentModulePath)(), '../../dist/koapache-cli'), [this.staticPath, '-p', this.netPort, this.XDomain && '--CORS'], { execArgv: [] });

                        return new Promise(function (resolve, reject) {

                            child.on('message', function (event) {

                                switch (event.type) {
                                    case 'ready':
                                        return resolve(event.data);
                                    case 'error':
                                        {

                                            var error = event.data;

                                            reject(Object.assign(new global[error.name](error.message), error));
                                        }
                                }
                            });
                        });
                    }
                }, {
                    key: 'URL',
                    get: function get() {

                        var address = this.address;

                        return address ? 'http://' + address.address + ':' + address.port : '';
                    }

                    /**
                     * URL to open in default browser
                     *
                     * @type {string}
                     */

                }, {
                    key: 'openURL',
                    get: function get() {

                        return typeof this.openPath !== 'string' ? this.URL : (0, _url.resolve)(this.URL, this.openPath);
                    }
                }]);

                return WebServer;
            }();

            exports.default = WebServer; /**
                                          * @typedef {Object} ServerAddress
                                          *
                                          * @property {string} family  - `IPv4`
                                          * @property {string} address - IP address
                                          * @property {number} port    - Network listening port
                                          */

            /**
             * @external {Application} https://github.com/koajs/koa/blob/master/docs/api/index.md#application
             */
        }
    },
    'form-data': { exports: form_data },
    'fs': { exports: fs },
    'url': { exports: url },
    'http': { exports: http },
    'https': { exports: https },
    'babel-polyfill': { exports: babel_polyfill },
    'koa': { exports: koa },
    'koa-logger': { exports: koa_logger },
    'koa-body': { exports: koa_body },
    '@koa/cors': { exports: _koa_cors },
    'koa-static': { exports: koa_static },
    'internal-ip': { exports: internal_ip },
    'opn': { exports: opn },
    'path': { exports: path },
    'child_process': { exports: child_process }
};

    return require('./WebServer');
});